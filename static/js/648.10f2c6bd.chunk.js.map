{"version":3,"file":"static/js/648.10f2c6bd.chunk.js","mappings":"8OAwFA,UAjFA,WACE,OAAgCA,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,SAAU,KAHZ,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,GAAwBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAjCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAERC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACR,OAAIN,QAAJ,IAAIA,GAAAA,EAAMO,OAAOH,EAAS,YAE3B,GAAE,CAACJ,EAAMI,IAEX,IAAMI,EAAW,SAAAC,GACf,MAAwBA,EAAEC,OAAlBlB,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,MACdf,GAAY,SAAAgB,GAAS,yBAChBA,GADgB,cAElBpB,EAAOmB,GAFW,GAItB,EAgBKE,EAAQ,WACZjB,EAAY,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAC9C,EAED,OACE,4BACE,UAAC,KAAD,CAAMoB,SApBO,SAAAL,GACfA,EAAEM,iBAEF,IAAMC,EAAY,CAChBxB,KAAMG,EAASH,KACfC,MAAOE,EAASF,MAChBC,SAAUC,EAASD,UAGzBQ,GAASe,EAAAA,EAAAA,IAAOD,IAEZH,GACD,EAQG,WACE,4BACE,SAAC,KAAD,CACEL,SAAUA,EACVhB,KAAK,OACLmB,MAAOhB,EAASH,KAChB0B,KAAK,OACLC,YAAY,sEAGhB,4BACE,SAAC,KAAD,CACEX,SAAUA,EACVhB,KAAK,QACLmB,MAAOhB,EAASF,MAChByB,KAAK,QACLC,YAAY,iFAGhB,4BACE,SAAC,KAAD,CACEX,SAAUA,EACVhB,KAAK,WACLmB,MAAOhB,EAASD,SAChBwB,KAAK,OACLC,YAAY,uFAGhB,SAAC,KAAD,CAAWD,KAAK,SAAhB,mFAIDjB,EAAMmB,OAAS,IAAK,+JAG1B,C,iKCrFYC,EAAUC,EAAAA,EAAAA,IAAH,0BAIPC,EAAOD,EAAAA,EAAAA,KAAH,mFAMJE,EAAQF,EAAAA,EAAAA,MAAH,mHAQLG,EAAYH,EAAAA,EAAAA,OAAH,qJAUGA,EAAAA,EAAAA,GAAH,2F","sources":["Pages/RegistorPage.jsx","Pages/styled.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { signUp } from 'Redux/Auth/auth-operations';\nimport { SubmitBtn, Form, Input } from './styled';\n\n\nfunction SignUpForm() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { user, error } = useSelector(state => state.auth);\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate();\n  \n   useEffect(() => {\n     if (user?.token) navigate('/contacts');\n     ;\n   }, [user, navigate]);\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const finalData = {\n      name: formData.name,\n      email: formData.email,\n      password: formData.password,\n    };\n   \ndispatch(signUp(finalData));\n\n    reset();\n  };\n\n  const reset = () => {\n    setFormData({ name: '', email: '', password: '' });\n  };\n\n  return (\n    <div>\n      <Form onSubmit={onSubmit}>\n        <label>\n          <Input\n            onChange={onChange}\n            name=\"name\"\n            value={formData.name}\n            type=\"text\"\n            placeholder=\"введіть ім'я\"\n          />\n        </label>\n        <label>\n          <Input\n            onChange={onChange}\n            name=\"email\"\n            value={formData.email}\n            type=\"email\"\n            placeholder=\"введіть пошту\"\n          />\n        </label>\n        <label>\n          <Input\n            onChange={onChange}\n            name=\"password\"\n            value={formData.password}\n            type=\"text\"\n            placeholder=\"введіть пароль\"\n          />\n        </label>\n        <SubmitBtn type=\"submit\">\n          Підтвердити\n        </SubmitBtn>\n      </Form>\n      {error.length > 0 && <p>Вибачте, виникла помилка</p>}\n    </div>\n  );\n}\nexport default SignUpForm;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n\n`;\n\nexport const Form = styled.form`\n  flex-direction: column;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Input = styled.input`\n  border-radius: 15px;\n  box-sizing: border-box;\n  cursor: pointer;\n  outline: none;\n\n`;\n\nexport const SubmitBtn = styled.button`\n  cursor: pointer;\n  border: none;\n  border-radius: 15px;\n  padding: 20px;\n  &:hover {\n    background: cadetblue;\n  }\n`;\n\nexport const HomeTitle = styled.h1`\n  text-align: center;\n  font-style: italic;\n  padding-top: 30px;\n`;\n\n// export const Input = styled.h1`\n//   text-align: center;\n//   font-style: italic;\n//   padding-top: 30px;\n// `;"],"names":["useState","name","email","password","formData","setFormData","useSelector","state","auth","user","error","dispatch","useDispatch","navigate","useNavigate","useEffect","token","onChange","e","target","value","prevState","reset","onSubmit","preventDefault","finalData","signUp","type","placeholder","length","Wrapper","styled","Form","Input","SubmitBtn"],"sourceRoot":""}