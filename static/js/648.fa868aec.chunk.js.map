{"version":3,"file":"static/js/648.fa868aec.chunk.js","mappings":"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","sources":["Pages/RegistorPage.jsx","Pages/styled.js","components/AppBar/AppBar.styled.js","components/AppBar/AppBar.jsx","components/ContactList/ContactList.styled.jsx","components/UserMenu.jsx"],"sourcesContent":["import AppBar from 'components/AppBar/AppBar';\nimport UserMenu from 'components/UserMenu';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { signUp } from 'Redux/Auth/auth-operations';\nimport { SubmitBtn, Form, Input, Label, InputPassWrapper } from './styled';\n\n\nfunction SignUpForm() {\n  const [show, setShow] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { user, error } = useSelector(state => state.auth);\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate();\n  \n   useEffect(() => {\n     if (user?.token) navigate('/contacts');\n     ;\n   }, [user, navigate]);\n  \n   const handleShowTaggle = () => {\n     setShow(!show);\n   };\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const finalData = {\n      name: formData.name,\n      email: formData.email,\n      password: formData.password,\n    };\n   \ndispatch(signUp(finalData));\n\n    reset();\n  };\n\n  const reset = () => {\n    setFormData({ name: '', email: '', password: '' });\n  };\nconst token = localStorage.getItem('token');\n  return (\n    <div>\n      <AppBar />\n      {token ? <UserMenu /> : <p>Ви не авторизувались</p>}\n      <Form onSubmit={onSubmit}>\n        <label>\n          <Input\n            onChange={onChange}\n            name=\"name\"\n            value={formData.name}\n            type=\"text\"\n            placeholder=\"введіть ім'я\"\n          />\n        </label>\n        <label>\n          <Input\n            onChange={onChange}\n            name=\"email\"\n            value={formData.email}\n            type=\"email\"\n            placeholder=\"введіть пошту\"\n          />\n        </label>\n        <label>\n          <InputPassWrapper>\n            <Input\n              onChange={onChange}\n              name=\"password\"\n              value={formData.password}\n              type={show ? 'text' : 'password'}\n              placeholder=\"введіть пароль\"\n            />\n            <Label onClick={handleShowTaggle}>{show ? 'Hide' : 'Show'}</Label>\n          </InputPassWrapper>\n        </label>\n        <SubmitBtn type=\"submit\">Підтвердити</SubmitBtn>\n      </Form>\n      {error.length > 0 && <p>Вибачте, виникла помилка</p>}\n    </div>\n  );\n}\nexport default SignUpForm;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n\n`;\n\nexport const Form = styled.form`\n  flex-direction: column;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const InputPassWrapper = styled.div`\n  position: relative;\n  border-radius: 15px;\n  box-sizing: border-box;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  font-size: 25px;\n  right: 3%;\n  top: 20%;\n  cursor: pointer;\n`;\n\n\nexport const Input = styled.input`\n  border-radius: 15px;\n  box-sizing: border-box;\n  // cursor: pointer;\n  outline: none;\n\n`;\n\nexport const SubmitBtn = styled.button`\n  cursor: pointer;\n  border: none;\n  border-radius: 15px;\n  padding: 20px;\n  &:hover {\n    background: cadetblue;\n  }\n`;\n\nexport const HomeTitle = styled.h1`\n  text-align: center;\n  font-style: italic;\n  padding-top: 30px;\n`;\n\n// export const Input = styled.h1`\n//   text-align: center;\n//   font-style: italic;\n//   padding-top: 30px;\n// `;","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  padding: 15px 30px;\n  font-size: 22px;\n  border: none;\n  border-radius: 10px 10px 0 0;\n  cursor: pointer;\n  &.active {\n    background-color: cadetblue;\n    color: white;\n  }\n`;","// import { useSelector } from \"react-redux\";\nimport { StyledNavLink } from \"./AppBar.styled\";\n\nconst AppBar = () => {\n  // const user = useSelector(state => state.auth.user);\n  const token = localStorage.getItem('token');\n    return (\n      <header>\n        <nav>\n          {token ? (\n            <StyledNavLink to=\"/contacts\">Контакти</StyledNavLink>\n          ) : (\n            <>\n              <StyledNavLink to=\"/\">Головна</StyledNavLink>\n              <StyledNavLink to=\"/register\">Регістрація</StyledNavLink>\n              <StyledNavLink to=\"/login\">Логін</StyledNavLink>\n            </>\n          )}\n\n          <hr />\n        </nav>\n      </header>\n    );\n}\n\nexport default AppBar;","import styled from '@emotion/styled';\n\nexport const Li = styled.li`\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  font-style: italic;\n  &::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nexport const BtnOnDelete = styled.button`\n  border: none;\n  cursor: pointer;\n  &:hover,\n  focus {\n    border-radius: 10px;\n    background: cadetblue;\n  }\n\n`;\n\nexport const DeleteForeverIcon = styled.svg`\n    font-size: 30px;\n`;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { logOut } from 'Redux/Auth/auth-operations';\nimport { BtnOnDelete } from './ContactList/ContactList.styled';\n\nfunction UserMenu() {\n  const user = useSelector(state => state.auth.user?.user);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const onLogOut = () => {\n    navigate(\"/login\");\n    dispatch(logOut());\n  };\n\n  return (\n\n    <div>\n      <p>\n        Ім'я:<b> {user?.name}</b>\n      </p>\n      <p>\n        Email:<b> {user?.email}</b>\n      </p>\n      <BtnOnDelete type=\"button\" onClick={onLogOut}>\n        Вийти\n      </BtnOnDelete>\n    </div>\n  );\n}\n\nexport default UserMenu;\n"],"names":["useState","show","setShow","name","email","password","formData","setFormData","useSelector","state","auth","user","error","dispatch","useDispatch","navigate","useNavigate","useEffect","token","onChange","e","target","value","prevState","reset","localStorage","getItem","onSubmit","preventDefault","finalData","signUp","type","placeholder","onClick","length","Wrapper","styled","Form","InputPassWrapper","Label","Input","SubmitBtn","StyledNavLink","NavLink","to","Li","BtnOnDelete","logOut"],"sourceRoot":""}